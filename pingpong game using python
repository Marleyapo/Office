import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
PAD_WIDTH2 = 8
PAD_HEIGHT2 = 80
HALF_PAD_WIDTH2 = PAD_WIDTH2 / 2
HALF_PAD_HEIGHT2 = PAD_HEIGHT2 / 2
LEFT = False
RIGHT = True
ball_pos=[WIDTH/2,HEIGHT/2]
ball_vel=[0,0]
paddle1_pos=[160,240]
paddle2_pos=[160,240]
paddle1_vel=0
paddle2_vel=0
d=0
p1=0
p2=0
# initialize ball_pos and ball_vel for new bal in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left

    
    

def spawn_ball(direction):
    global d,ball_pos, ball_vel, HEIGHT, WIDTH # these are vectors stored as lists
    ball_pos=[WIDTH/2, HEIGHT/2]
    d=direction
    if(direction==1):
        ball_vel[0] = random.randrange(-4, -2)
        ball_vel[1] = random.randrange(-3, -1)
    elif(direction==0):
        ball_vel[0] = random.randrange(2, 4)
        ball_vel[1] = random.randrange(-3, -1)
    

def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel,d  # these are numbers
    global p1, p2  # these are ints
    p1=0
    p2=0
    paddle1_pos=[160,240]
    paddle2_pos=[160,240]
    spawn_ball(d)

def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel
    global BALL_RADIUS, WIDTH, HEIGHT, PAD_WIDTH, PAD_HEIGHT ,paddle1_vel, paddle2_vel
    global HALF_PAD_WIDTH1, HALF_PAD_WIDTH2 ,HALF_PAD_HEIGHT1 ,HALF_PAD_HEIGHT2,d,p1,p2
    
        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
    
    # update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    
    if(ball_pos[0] <= BALL_RADIUS+8 and ball_pos[1]>paddle1_pos[0] and ball_pos[1]<paddle1_pos[1]):         
            ball_vel[0] = -ball_vel[0]
            ball_vel[0] += 1   
            ball_pos[0] = 8+BALL_RADIUS
    elif(ball_pos[0] >= WIDTH-(BALL_RADIUS+8) and ball_pos[1]>paddle2_pos[0] and ball_pos[1]<paddle2_pos[1]):            
            ball_vel[0] = -ball_vel[0]
            ball_vel[0] -= 1
            ball_pos[0] = WIDTH-(8+BALL_RADIUS)
    elif(ball_pos[1] <= BALL_RADIUS):        
            ball_vel[1] = -ball_vel[1]       
    elif(ball_pos[1] >= 380):        
            ball_vel[1] = -ball_vel[1] 
    elif(ball_pos[0]<0 or ball_pos[0]>WIDTH):
        if(ball_pos[0]<0):
            d=0
            p2 += 1
            spawn_ball(d)
        elif(ball_pos[0]>WIDTH):
            d=1
            p1+= 1
            spawn_ball(d)   
    # draw ball
    canvas.draw_circle((ball_pos), BALL_RADIUS, 1, 'red', 'white')
    # update paddle's vertical position, keep paddle on the screen
    paddle1_pos[0] += paddle1_vel
    paddle1_pos[1] += paddle1_vel
    paddle2_pos[0] += paddle2_vel
    paddle2_pos[1] += paddle2_vel
    HALF_PAD_HEIGHT2 = (paddle2_pos[0]+paddle2_pos[1])/2
    HALF_PAD_HEIGHT1 = (paddle1_pos[0]+paddle1_pos[1])/2
    if(paddle1_pos[0]<=0 and paddle1_pos[1]<=80):
        paddle1_pos[0]=0
        paddle1_pos[1]=80
    elif(paddle1_pos[0]>=320 and paddle1_pos[1]>=400):
        paddle1_pos[0]=320
        paddle1_pos[1]=400 
    if(paddle2_pos[0]<=0 and paddle2_pos[1]<=80):
        paddle2_pos[0]=0
        paddle2_pos[1]=80
    elif(paddle2_pos[0]>=320 and paddle2_pos[1]>=400):
        paddle2_pos[0]=320
        paddle2_pos[1]=400     
    # draw paddles
    canvas.draw_line((4,paddle1_pos[0]), (4, paddle1_pos[1]), 8, 'white')
    canvas.draw_line((596, paddle2_pos[0]), (596, paddle2_pos[1]), 8, 'white')
    # determine whether paddle and ball collide    
    
   
    # draw scores
    canvas.draw_text(str(p1), (147, 50), 50, 'white')   
    canvas.draw_text(str(p2), (447, 50), 50, 'white')
def keydown(key):
    global paddle1_vel, paddle2_vel
    if(key == simplegui.KEY_MAP["up"]):
        paddle2_vel=-5
    elif(key == simplegui.KEY_MAP["down"]):
        paddle2_vel=5
    elif(key == simplegui.KEY_MAP["w"]):
        paddle1_vel=-5
    elif(key == simplegui.KEY_MAP["s"]):
        paddle1_vel=5    
        
def keyup(key):
    global paddle1_vel, paddle2_vel
    if(key == simplegui.KEY_MAP["up"] or key == simplegui.KEY_MAP["down"]):
        paddle2_vel=0
    elif(key == simplegui.KEY_MAP["w"] or key == simplegui.KEY_MAP["s"]):
        paddle1_vel=0

# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
frame.add_button('Restart', new_game, 200)

# start frame
new_game()
frame.start()
